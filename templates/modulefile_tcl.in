#%Module###<-magic cookie ####################################################
##
##   Simons Observatory Conda Environment.
##
##
# variables for Tcl script use only
set     version  @VERSION@

module-whatis "Loads conda tools for the Simons Observatory."

proc ModulesHelp { } {
    global version
    puts stderr "\t\t Simons Observatory Conda Environment - Version $version\n"
    puts stderr ""
}

conflict sohpc so-env soconda

# Dependency module commands
@MODLOAD@

# This might be set by OS python and gives us problems.
unsetenv PYTHONSTARTUP

# Create a versioned location for user-installed pip packages.
setenv PYTHONUSERBASE $env(HOME)/.local/soconda/@VERSION@/pip

# Source the conda init script for our shell.  Note that this 
# requires a fairly recent version of Modules or Lmod.

if [ module-info shelltype sh ] {
    source-sh bash "@BASE@/etc/profile.d/conda.sh"
}
if [ module-info shelltype csh ] {
    source-sh tcsh "@BASE@/etc/profile.d/conda.csh"
}

# Activate the conda environment by modifying the environment
# directly.  This is needed since the source-sh and system
# calls do not work.  This solution could be fragile, so should
# be revisited in the future if all systems move to Lmod.  Lua
# module files should better support calling "conda activate"
# directly

setenv CONDA_PREFIX "@ENVPREFIX@"

setenv CONDA_PROMPT_MODIFIER ""

setenv CONDA_SHLVL "1"

setenv CONDA_DEFAULT_ENV "@ENVNAME@"

prepend-path PATH "@ENVPREFIX@/bin"
